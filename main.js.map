{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\ninterface Room {\n  value: number;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  username: string;\n  password: string;\n  acId: number = 1;\n\n  rooms: Room[] = [\n    {viewValue: 'Michael', value: 1},\n    {viewValue: 'Engelbert&Monika', value: 2}\n  ];\n\n  isLoading = false;\n  isLoadingSuccessful = false;\n  hasError = false;\n  errorMessage = \"\";\n\n  constructor(private http: HttpClient, private cookieService: CookieService)\n  {\n    \n  }\n  ngOnInit(): void {\n    let user = this.cookieService.get(\"AC_User\");\n    let pw = this.cookieService.get(\"AC_PW\");\n\n    if(user)\n    {\n      this.username = user;\n    }\n\n    if(pw)\n    {\n      this.password = pw;\n    }\n  }\n\n  public turnOn()\n  {\n    this.send(true);\n  }\n\n  public turnOff()\n  {\n    this.send(false);\n  }\n\n  private send(value: boolean)\n  {\n    this.isLoading = true;\n    let url = \"https://impossible-geode-mockingbird.glitch.me/status/\"+this.acId;\n    let body = {\n      status: value,\n      username: this.username,\n      password: this.password\n    };\n\n    this.http.post(url,body).subscribe(response => {\n      this.isLoading = false;\n      this.hasError = false;\n      this.isLoadingSuccessful = true;\n      setTimeout(() => {\n        this.isLoadingSuccessful = false;\n      },5000);\n      this.cookieService.set(\"AC_User\",this.username);\n      this.cookieService.set(\"AC_PW\",this.password);\n    },error =>{\n      if(error.status === 403)\n      {\n        this.hasError = true;\n        this.errorMessage = \"User oder Passwort ist falsch!\";\n      }\n      this.isLoading = false;\n    })\n\n  }\n}\n","<div class=\"center\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Username</mat-label>\n      <input matInput placeholder=\"Username\" [(ngModel)]=\"username\" >\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Username</mat-label>\n      <input matInput placeholder=\"Username\" type=\"password\" [(ngModel)]=\"password\" >\n    </mat-form-field>\n\n    <div class=\"error\" *ngIf=\"hasError\">\n      {{errorMessage}}\n    </div><br>\n\n    \n\n    <mat-form-field appearance=\"fill\" class=\"example-full-width\">\n      <mat-label>Raum</mat-label>\n      <mat-select [(ngModel)]=\"acId\">\n        <mat-option *ngFor=\"let room of rooms\" [value]=\"room.value\">\n          {{room.viewValue}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <div class=\"row\" style=\"width: 100%;\">\n      <div class=\"col-5\">\n        <button mat-raised-button class=\"mybuttonbase mybutton\" (click)=\"turnOn()\">On</button>\n      </div>\n      <div class=\"col-5\">\n        <button mat-raised-button class=\"mybuttonbase\" color=\"warn\" (click)=\"turnOff()\">Off</button>\n      </div>\n      <div class=\"col-2\">\n        <mat-spinner *ngIf=\"isLoading\" mode=\"indeterminate\" diameter=\"50\" ></mat-spinner>\n        <mat-icon *ngIf=\"isLoadingSuccessful\" class=\"successIcon\" >done</mat-icon>\n      </div>\n    </div>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CookieService } from 'ngx-cookie-service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    NgbModule,\n    MatSelectModule,\n    MatIconModule\n  ],\n  exports:[\n    MatInputModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatIconModule\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}